version: '3'

services:
  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --host 127.0.0.1 --user postgres"]
      start_period: 30s
      interval: 2s
      timeout: 5s
      retries: 120

  redis:
    image: redis
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 2s
      timeout: 3s
      retries: 20

  web:
    build:
      context: .
      dockerfile: ./pipelines_platform/Dockerfile
    command: dagster-webserver --port 8080 --host 0.0.0.0 --workspace ./pipelines_platform/workspace.yaml
    environment:
      POSTGRES_URL: postgresql://postgres:postgres@db/postgres
      REDIS_URL: redis://redis/
      DAGSTER_HOME: /app/pipelines_platform
      CODE_SERVERS__DEET__HOST: code-server-deet
      CODE_SERVERS__DATA_SCIENCE__HOST: code-server-data-science
      CODE_SERVERS__DATASETS_AND_ANALYSIS__HOST: code-server-datasets-and-analysis
      CODE_SERVERS__GSCIP__HOST: code-server-gscip
      CODE_SERVERS__LITE__HOST: code-server-lite
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      code-server-deet:
        condition: service_healthy
      code-server-gscip:
        condition: service_healthy
      code-server-data-science:
        condition: service_healthy
      code-server-lite:
        condition: service_healthy
      code-server-datasets-and-analysis:
        condition: service_healthy

  daemon:
    build:
      context: .
      dockerfile: ./pipelines_platform/Dockerfile
    command: dagster-daemon run --workspace ./pipelines_platform/workspace.yaml
    environment:
      POSTGRES_URL: postgresql://postgres:postgres@db/postgres
      REDIS_URL: redis://redis/
      DAGSTER_HOME: /app/pipelines_platform
      CODE_SERVERS__DEET__HOST: code-server-deet
      CODE_SERVERS__DATA_SCIENCE__HOST: code-server-datasets-and-analysis
      CODE_SERVERS__DATASETS_AND_ANALYSIS__HOST: code-server-deet
      CODE_SERVERS__GSCIP__HOST: code-server-gscip
      CODE_SERVERS__LITE__HOST: code-server-lite
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      code-server-deet:
        condition: service_healthy
      code-server-gscip:
        condition: service_healthy
      code-server-data-science:
        condition: service_healthy
      code-server-lite:
        condition: service_healthy
      code-server-datasets-and-analysis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: ./pipelines_platform/Dockerfile
    command: dagster-celery worker start -A dagster_celery.app --config-yaml ./pipelines_platform/executor.yaml
    environment:
      POSTGRES_URL: postgresql://postgres:postgres@db/postgres
      REDIS_URL: redis://redis/
      DAGSTER_HOME: /app/pipelines_platform
    volumes:
      - ${PWD}/teams:/app/teams
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  code-server-deet: &code-server
    build:
      context: .
      dockerfile: ./pipelines_platform/Dockerfile
    command: dagster code-server start --port 8080 --host 0.0.0.0 --module-name teams.deet
    healthcheck:
      test: ["CMD-SHELL", "dagster api grpc-health-check --port 8080"]
      start_period: 30s
      interval: 2s
      timeout: 2s
      retries: 5
    environment:
      POSTGRES_URL: postgresql://postgres:postgres@db/postgres
      REDIS_URL: redis://redis/
      DAGSTER_HOME: /app/pipelines_platform
    volumes:
      - ${PWD}/teams:/app/teams
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  code-server-data-science:
    <<: *code-server
    command: dagster code-server start --port 8080 --host 0.0.0.0 --module-name teams.data_science

  code-server-datasets-and-analysis:
    <<: *code-server
    command: dagster code-server start --port 8080 --host 0.0.0.0 --module-name teams.datasets_and_analysis

  code-server-gscip:
    <<: *code-server
    command: dagster code-server start --port 8080 --host 0.0.0.0 --module-name teams.gscip

  code-server-lite:
    <<: *code-server
    command: dagster code-server start --port 8080 --host 0.0.0.0 --module-name teams.lite
